# Rogue Planet Configuration Example
#
# This file demonstrates all available configuration options.
# Copy this to your planet directory and customize as needed.
#
# Format: Standard INI with [sections] and key = value pairs
# Lines starting with # are comments

[planet]
# Required: Your planet's name (appears in page title and header)
name = My Planet

# Required: Your planet's URL (used for absolute links)
# Example: https://planet.example.com
link = https://example.com

# Optional: Planet owner information (appears in footer and feeds)
owner_name = Your Name
owner_email = you@example.com

# Output directory for generated HTML files
# Default: ./public
output_dir = ./public

# Number of days of entries to show
# Default: 7
# Tip: Increase for slower-moving planets (14-30 days), decrease for high-volume (3-5 days)
days = 7

# Logging verbosity: debug, info, warn, error
# Default: info
# Use "debug" for troubleshooting feed parsing or HTTP issues
log_level = info

# Number of feeds to fetch concurrently
# Default: 5
# Range: 1-50
# Tip: Higher values fetch faster but use more network connections
concurrent_fetches = 5

# HTTP User-Agent header sent when fetching feeds
# Default: RoguePlanet/0.1
# Best practice: Include your planet URL for feed owners to contact you
#   user_agent = RoguePlanet/0.3 (+https://planet.example.com/about)
user_agent = RoguePlanet/0.3

# HTTP CONNECTION POOLING AND RETRY SETTINGS (v0.4.0+)
# These settings control HTTP connection reuse and retry behavior

# Number of retry attempts for failed requests
# Default: 3
# Range: 0-10
# Exponential backoff: 1s, 2s, 4s, 8s...
# Set to 0 to disable retries
max_retries = 3

# Total idle HTTP connections to keep across all hosts
# Default: 100
# Range: 10-1000
# Higher values improve performance when fetching many feeds
max_idle_conns = 100

# Idle connections to keep per host
# Default: 10
# Range: 1-100
# Key setting for connection reuse when fetching from same domain
max_idle_conns_per_host = 10

# Maximum active connections per host
# Default: 20
# Range: 1-200
# Prevents overwhelming individual servers
max_conns_per_host = 20

# Idle connection timeout in seconds
# Default: 90
# Range: 10-600
# Connections are closed after being idle for this duration
idle_conn_timeout_seconds = 90

# HTTP TIMEOUT SETTINGS (v0.4.0+)
# Fine-grained control over various timeout stages

# Overall HTTP request timeout in seconds
# Default: 30
# Range: 5-300
# Total time allowed for the entire request/response cycle
http_timeout_seconds = 30

# TCP connection timeout in seconds
# Default: 10
# Range: 1-60
# Time allowed to establish TCP connection
dial_timeout_seconds = 10

# TLS handshake timeout in seconds
# Default: 10
# Range: 1-60
# Time allowed for TLS/SSL handshake
tls_handshake_timeout_seconds = 10

# Response header timeout in seconds
# Default: 10
# Range: 1-60
# Time allowed to receive response headers after sending request
response_header_timeout_seconds = 10

# RATE LIMITING (v0.4.0+)
# Per-domain rate limiting prevents overwhelming individual servers
# Good netizen behavior: Prevents aggressive polling that could get you blocked

# Maximum requests per domain per minute
# Default: 60
# Range: 1-600
# Example: 60 = up to 1 request per second per domain
# Tip: Decrease (30) for shared hosting, increase (120) for robust APIs
requests_per_minute = 60

# Rate limit burst size
# Default: 10
# Range: 1-50
# Allows temporary spikes above the sustained rate
# Example: Burst of 10 allows fetching 10 feeds from same domain immediately
rate_limit_burst = 10

# Group entries by date in the output
# Default: true
# When true, shows "Today", "Yesterday", date headers
# When false, shows flat chronological list
group_by_date = true

# Custom theme template (optional)
# If not specified, uses built-in default theme
# Examples:
#   template = ./themes/classic/template.html
#   template = ./themes/elegant/template.html
#   template = ./themes/dark/template.html
#   template = ./themes/flexoki/template.html
# See examples/themes/ for available themes

# ENTRY SPAM PREVENTION (v0.3.0+)
# Prevents timeline flooding when adding feeds with large archives

# Filter entries by discovery date instead of published date
# Default: false
# When true, only shows entries discovered within the last N days
# When false (default), shows entries published within the last N days
# Use case: Add a feed with 100 historical posts but only show recent discoveries
filter_by_first_seen = false

# Sort entries by "published" date or "first_seen" date
# Default: published
# Options: published, first_seen
# - "published": Traditional behavior, entries sorted by author's publish date
# - "first_seen": Stable ordering, entries never move when authors update them
# Use case: Prevent entries from "jumping" in your timeline when authors edit posts
sort_by = published

[database]
# SQLite database path
# Default: ./data/planet.db
# The database stores feed metadata, HTTP cache headers, and entries
path = ./data/planet.db

# USAGE EXAMPLES
#
# Example 1: High-volume planet (show 3 days, sort by discovery)
#   days = 3
#   sort_by = first_seen
#   filter_by_first_seen = true
#
# Example 2: Slow-moving planet (show 30 days, traditional sorting)
#   days = 30
#   sort_by = published
#   filter_by_first_seen = false
#
# Example 3: Custom theme
#   template = ./themes/classic/template.html
#
# Example 4: Debug feed parsing issues
#   log_level = debug
#   concurrent_fetches = 1
#
# Example 5: Fast fetching for many feeds
#   concurrent_fetches = 20

# See also:
# - README.md - Complete documentation
# - QUICKSTART.md - 5-minute setup guide
# - WORKFLOWS.md - Common operational workflows
# - THEMES.md - Theme customization guide
